<section>
    <div class="d-flex">
        {{> sidebar}}

        <div class="content col-md-10">
            <h1>Movies Manager</h1>
            <p>Hi. Welcome back to CineSeats Admin!</p>

            <div class="container-admin">
                <!-- Filter Options -->
                <div class="filter-options d-flex justify-content-between">
                    <!-- Search and Filter -->
                    <div>
                        <input type="text" id="filter-name" placeholder="Search by movie name..." class="filter"
                            style="width: 200px;">
                        <select id="filter-genre" class="filter" style="width: 150px;">
                            <option value="all">All Gerne</option>
                            <option value="Action">Action</option>
                            <option value="Comedy">Comedy</option>
                            <option value="Drama">Drama</option>
                            <option value="Fantasy">Fantasy</option>
                            <option value="Horror">Horror</option>
                            <option value="Mystery">Mystery</option>
                            <option value="Romance">Romance</option>
                            <option value="Thriller">Thriller</option>
                            <option value="Family">Family</option>
                            <option value="Adventure">Adventure</option>
                        </select>
                        <select id="filter-country" class="filter" style="width: 150px;">
                            <option value="all">All Country</option>
                            <option value="VietNam">VietNam</option>
                            <option value="America">America</option>
                            <option value="Japan">Japan</option>
                            <option value="Korea">Korea</option>
                            <option value="China">China</option>
                            <option value="Thailand">Thailand</option>
                            <option value="Other">Other</option>
                        </select>
                        <button id="filter-button">Filter</button>
                    </div>

                    <!-- Sort Options -->
                    <div>
                        <label for="sort-by">Sort by:</label>
                        <select id="sort-by" class="filter" style="width: 150px;">
                            <option value="none">None</option>
                            <option value="released_time">Released Time</option>
                            <option value="price">Price</option>
                            <option value="total_purchase">Total Purchase</option>
                        </select>
                        <select id="sort-order" class="filter">
                            <option value="asc">Ascending</option>
                            <option value="desc">Descending</option>
                        </select>
                        <button id="sort-button">Sort</button>
                    </div>
                </div>
                <br>

                <!-- Movie Table -->
                <div style="overflow-y: auto; max-height: 500px;">
                    <table id="movie-db" class="table table-striped">
                        <thead>
                            <tr>
                                <th style="width: 30%;">Movie Name</th>
                                <th style="width: 10%;">Genre</th>
                                <th style="width: 10%;">Country</th>
                                <th style="width: 8%;">Price</th>
                                <th style="width: 12%;">Total Purchases</th>
                                <th style="width: 15%;">Released Time</th>
                                <th style="width: 15%;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {{#each movies}}
                            <tr>
                                <td>{{name_vn}}</td>
                                <td>{{type_name_en}}</td>
                                <td>{{country_name_en}}</td>
                                <td>{{price}}</td>
                                <td>{{totalPurchases}}</td>
                                <td>{{release_date}}</td>
                                <td>
                                    <button>Edit</button>
                                    <button>Delete</button>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>


            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Fetch movies with optional filters
        const fetchmovies = async (filters = {}) => {
            const params = new URLSearchParams(filters);
            const response = await fetch(`/admin/movies?${params.toString()}`);
            console.log("response:", response); // Debugging
            if (response.ok) {
                const { movies } = await response.json();
                console.log("movies:", movies); // Debugging
                populatemovieTable(movies);
            } else {
                console.error("Error fetching movies.");
            }
        };

        // Populate the movie table
        const populatemovieTable = (movies) => {
            const tbody = document.querySelector("#movie-db tbody");
            tbody.innerHTML = ""; // Clear existing rows

            movies.forEach((movie) => {
                const row = `
                <tr>
                    <td>${movie.name_vn}</td>
                    <td>${movie.type_name_en}</td>
                    <td>${movie.country_name_en}</td>
                    <td>${movie.price}</td>
                    <td>${movie.totalPurchases}</td>
                    <td>${new Date(movie.release_date).toLocaleString('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh' })}</td>
                    <td>
                        <button class="edit-btn btn btn-sm btn-warning" data-id="${movie.id}">Edit</button>
                        <button class="delete-btn btn btn-sm btn-danger" data-id="${movie.id}">Delete</button>
                    </td>
                </tr>
            `;
                tbody.insertAdjacentHTML("beforeend", row);
            });

            // Assign event listeners to buttons (e.g., Edit/Delete)
            assignActionListeners();
        };

        // Assign action listeners for Edit and Delete buttons
        const assignActionListeners = () => {
            document.querySelectorAll(".edit-btn").forEach((button) => {
                button.addEventListener("click", async () => {
                    const movieId = button.dataset.id;

                });
            });

            document.querySelectorAll(".delete-btn").forEach((button) => {
                button.addEventListener("click", async () => {
                    const movieId = button.dataset.id;
                    if (confirm("Are you sure you want to delete this movie?")) {
                        const response = await fetch(`/admin/movies/${movieId}`, { method: "DELETE" });
                        if (response.ok) {
                            alert("Movie deleted.");
                            fetchmovies(); // Refresh table
                        } else {
                            alert("Error deleting movie.");
                        }
                    }
                });
            });
        };

        // Filter button logic
        document.getElementById("filter-button").addEventListener("click", () => {
            const name = document.getElementById("filter-name").value.trim();
            const genre = document.getElementById("filter-genre").value;
            const country = document.getElementById("filter-country").value;

            // Only send filters that are applied
            const filters = {};
            if (name) filters.name = name;
            if (genre && genre !== "all") filters.genre = genre;
            if (country && country !== "all") filters.country = country;

            fetchmovies(filters);
        });

        // Sort button logic
        document.getElementById("sort-button").addEventListener("click", () => {
            const sortBy = document.getElementById("sort-by").value;
            const sortOrder = document.getElementById("sort-order").value;

            const filters = {};
            if (sortBy && sortBy !== "none") filters.sortBy = sortBy;
            if (sortOrder) filters.sortOrder = sortOrder;

            console.log("Sort applied:", filters); // Debugging line
            fetchmovies(filters);
        });

        // Initial load (fetch all movies)
        fetchmovies();
    });
</script>